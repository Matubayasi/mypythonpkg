import sys
import shutil

args = sys.argv
polyinp = args[1]
solinp = args[2]

def read_data(fname):
    with open(fname, 'rt') as f:
        lines = [line.strip() for line in f]
    moltype = {'atoms':0,'bonds':0,'angles':0,'dihedrals':0, 'atom types':0, 'bond types':0, 'angle types':0, 'dihedral types':0}

    for key in moltype.keys():
        try:
            moltype[key] = int([line for line in lines if key in line][0].split()[0])
        except:
            pass

    for key in ['Masses', 'Atoms', 'Bonds', 'Angles', 'Dihedrals']:
        try:
            moltype[key + ' index'] = lines.index(key)
        except:
            moltype[key + ' index'] = 0
 
    return moltype, lines

poly, polylines = read_data(polyinp)
sol, sollines = read_data(solinp)

print('poly', poly)
print('sol', sol)


mixed = {'atoms':0,'bonds':0,'angles':0,'dihedrals':0, 'atom types':0, 'bond types':0, 'angle types':0, 'dihedral types':0}
for key in mixed.keys():
    mixed[key] = poly[key] + sol[key]
print('mixed', mixed)


new_lines = ['' for i in range(len(polylines) + len(sollines))]
new_lines[0] = 'This data file is generated by combining' + polyinp + ' with ' + solinp + '.\n\n'
new_lines[1] = ' {0:8d} atoms\n {1:8d} bonds\n {2:8d} angles\n {3:8d} dihedrals\n\n'.format(mixed['atoms'], mixed['bonds'], mixed['angles'], mixed['dihedrals'])
new_lines[2] = ' {0:3d} atom types\n {1:3d} bond types\n {2:3d} angle types\n {3:3d} dihedral types\n\n'.format(mixed['atom types'], mixed['bond types'], mixed['angle types'], mixed['dihedral types'])
for il in range(3):
    new_lines[3+il] = polylines[poly['Masses index']-4+il] + '\n'
new_lines[6] = '\n'


#### Masses ######
new_lines[7] = 'Masses\n\n'
for il in range(poly['atom types']):
    new_lines[8+il] = polylines[poly['Masses index']+2+il] + '\n'

### sol #########
for jl in range(sol['atom types']):
    ls = sollines[sol['Masses index']+2+jl]
    ls_list = ls.split()
    ls_list[0] = str(int(ls_list[0]) + poly['atom types'])
    ls_new = '\t'.join(ls_list) 
    new_lines[8+il+jl+1] = ls_new + '\n'
new_lines[8+il+jl+1] += '\n'
index = 8+il+jl+1


### Atoms #######
new_lines[index+1] = 'Atoms\n\n'
for kl in range(poly['atoms']):
    new_lines[index+2+kl] = polylines[poly['Atoms index']+2+kl] + '\n'

### sol ########
poly_nummol = int(new_lines[index+2+kl].split()[1])
for ll in range(sol['atoms']):
    ls = sollines[sol['Atoms index']+2+ll]
    ls_list = ls.split()
    ls_list[0] = str(int(ls_list[0]) + poly['atoms'])
    ls_list[1] = str(int(ls_list[1]) + poly_nummol)
    ls_list[2] = str(int(ls_list[2]) + poly['atom types'])
    ls_new= '\t'.join(ls_list)
    new_lines[index+2+kl+1+ll] = ls_new +'\n'
new_lines[index+2+kl+1+ll] += '\n'
index += 2+kl+1+ll


### Bonds ######
new_lines[index+1] = 'Bonds\n\n'
for ml in range(poly['bonds']):
    new_lines[index+2+ml] = polylines[poly['Bonds index']+2+ml] + '\n'

### sol ########
for ol in range(sol['bonds']):
    ls = sollines[sol['Bonds index']+2+ol]
    ls_list = ls.split()
    ls_list[0] = str(int(ls_list[0]) + poly['bonds'])
    ls_list[1] = str(int(ls_list[1]) + poly['bond types'])
    ls_list[2] = str(int(ls_list[2]) + poly['atoms'])
    ls_list[3] = str(int(ls_list[3]) + poly['atoms'])
    ls_new= '\t'.join(ls_list)
    new_lines[index+2+ml+1+ol] = ls_new +'\n'
new_lines[index+2+ml+1+ol] += '\n'
index += 2+ml+1+ol


### Angles ####
new_lines[index+1] = 'Angles\n\n'
for pl in range(poly['angles']):
    new_lines[index+2+pl] = polylines[poly['Angles index']+2+pl] + '\n'

### sol ########
for ql in range(sol['angles']):
    ls = sollines[sol['Angles index']+2+ql]
    ls_list = ls.split()
    ls_list[0] = str(int(ls_list[0]) + poly['angles'])
    ls_list[1] = str(int(ls_list[1]) + poly['angle types'])
    ls_list[2] = str(int(ls_list[2]) + poly['atoms'])
    ls_list[3] = str(int(ls_list[3]) + poly['atoms'])
    ls_list[4] = str(int(ls_list[4]) + poly['atoms'])
    ls_new= '\t'.join(ls_list)
    new_lines[index+2+pl+1+ql] = ls_new +'\n'
new_lines[index+2+pl+1+ql] += '\n'
index += 2+pl+1+ql


### Dihedrals ##
new_lines[index+1] = 'Dihedrals\n\n'
for rl in range(poly['dihedrals']):
    new_lines[index+2+rl] = polylines[poly['Dihedrals index']+2+rl] + '\n'

### sol ########
if sol['dihedrals'] != 0:
    for sl in range(sol['dihedrals']):
        ls = sollines[sol['Dihedrals index']+2+sl]
        ls_list = ls.split()
        ls_list[0] = str(int(ls_list[0]) + poly['dihedrals'])
        ls_list[1] = str(int(ls_list[1]) + poly['dihedral types'])
        ls_list[2] = str(int(ls_list[2]) + poly['dihedrals'])
        ls_list[3] = str(int(ls_list[3]) + poly['dihedrals'])
        ls_list[4] = str(int(ls_list[4]) + poly['dihedrals'])
        ls_list[5] = str(int(ls_list[5]) + poly['dihedrals'])
        ls_new= '\t'.join(ls_list)
        new_lines[index+2+rl+1+sl] = ls_new +'\n'
    new_lines[index+2+rl+1+sl] += '\n'


dirname = polyinp.split('/')[0]
with open(dirname+'/system_mixed.data', 'wt') as f:
    f.writelines(new_lines)
